#!/bin/bash
######### Administration Menus and permission ###############
#Install or Update sqlite3 database
pathDB="/var/www/db"
pathTmpDB="/tmp/sqlite3/db"
mkdir -p $pathTmpDB

echo "#############################################"
echo "#### Staring Verification SQLITE Changes ####"
echo "#############################################"
#Con ayuda de %config(noreplace) se crea .rpmnew si hubo cambios
#Por el momneto me interesa estas tres bases si cambiaron.
ls $pathDB/menu.db.rpmnew &>/dev/null
modificadoPorUsuarioMenuDb=$?
ls $pathDB/acl.db.rpmnew &>/dev/null
modificadoPorUsuarioAclDb=$?
ls $pathDB/fax.db.rpmnew &>/dev/null
modificadoPorUsuarioFaxDb=$?

mv $pathDB/*.rpmnew $pathTmpDB/

elastix_version=$1
echo "pre version elastix $elastix_version" 

if [ "$elastix_version" \< "0.9.1" ]; then
    #Update only menu.db and acl.db (tables acl_resource, acl_group)
    #paso 1: repaldo de bases
        cp $pathDB/menu.db $pathDB/menu_old.db
        cp $pathDB/acl.db  $pathDB/acl_old.db
        echo "End step 1, backup databases"
    if [ $modificadoPorUsuarioMenuDb -eq 0 ]; then
        #paso 2: elimino menus viejos
            sqlite3 $pathDB/menu.db "delete from menu where id='freepbx';"
            echo "delete old menu freepbx." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='poper';"
            echo "delete old menu poper." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='recordings';"
            echo "delete old menu recordings." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='voicemails';"
            echo "delete old menu voicemails." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='developer';"
            echo "delete old menu developer." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='ari';"
            echo "delete old menu ari." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='outgoingcalls';"
            echo "delete old menu outgoingcalls." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='incomingcalls';"
            echo "delete old menu incomingcalls." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='menuadmin';"
            echo "delete old menu menuadmin." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='backup';"
            echo "delete old menu backup." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='restore';"
            echo "delete old menu restore." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='backuplist';"
            echo "delete old menu backuplist." ;
            sqlite3 $pathDB/menu.db "delete from menu where id='ports_details';"
            echo "delete old menu ports_details." ;
            sqlite3 $pathDB/acl.db  "delete from acl_group_permission where id_resource=(select id from acl_resource where name='freepbx');"
            sqlite3 $pathDB/acl.db  "delete from acl_resource where name='freepbx';"
            sqlite3 $pathDB/acl.db  "delete from acl_group_permission where id_resource=(select id from acl_resource where name='backup');"
            sqlite3 $pathDB/acl.db  "delete from acl_resource where name='backup';"
            sqlite3 $pathDB/acl.db  "delete from acl_group_permission where id_resource=(select id from acl_resource where name='restore');"
            sqlite3 $pathDB/acl.db  "delete from acl_resource where name='restore';"
            sqlite3 $pathDB/acl.db  "delete from acl_group_permission where id_resource=(select id from acl_resource where name='backuplist');"
            sqlite3 $pathDB/acl.db  "delete from acl_resource where name='backuplist';"
            sqlite3 $pathDB/acl.db  "delete from acl_group_permission where id_resource=(select id from acl_resource where name='ports_details');"
            sqlite3 $pathDB/acl.db  "delete from acl_resource where name='ports_details';"
            echo "End step 2, delete menus olds"
        
        #paso 3: Insertar menus creados por usuarios
            sqlite3 $pathDB/menu.db "alter table menu rename to menu_old;"
            sqlite3 $pathTmpDB/menu.db.rpmnew ".dump menu" > $pathTmpDB/menu.table
            sqlite3 $pathDB/menu.db ".read $pathTmpDB/menu.table"
            sqlite3 $pathDB/menu.db " select mo.id  from menu_old mo left join menu m on mo.id=m.id where m.id is null;" > $pathTmpDB/user_menu.data
            
            for i in `cat $pathTmpDB/user_menu.data`; do 
                echo "insert row $i to table menu." ; 
                sqlite3 $pathDB/menu.db "insert into menu select id,idParent,link,name,type from menu_old where id='$i';"
            done
            echo "End step 3, insert menus create for user"
        
        #paso 4: Eliminar tabla menu_old creada temporalmente
            sqlite3 $pathDB/menu.db "drop table menu_old;"
            echo "End step 4, delete table temporalable menu_old"
    fi
    if [ $modificadoPorUsuarioAclDb -eq 0 ]; then
        #paso 5: Insertar permisos de nuevos menus al usuario administrador (tablas acl_resource y acl_group_permission) 
            sqlite3 $pathTmpDB/acl.db.rpmnew "alter table acl_resource rename to acl_resource_new;"
            sqlite3 $pathTmpDB/acl.db.rpmnew ".dump acl_resource_new" > $pathTmpDB/acl_resource_new.table
            sqlite3 $pathDB/acl.db ".read $pathTmpDB/acl_resource_new.table"
            sqlite3 $pathDB/acl.db " select arn.name  from acl_resource_new arn left join acl_resource ar on arn.name=ar.name where ar.name is null;" > $pathTmpDB/user_acl_resource.data
            
            for i in `cat $pathTmpDB/user_acl_resource.data`; do 
                if [ `sqlite3 $pathDB/acl.db "select count(*) from acl_resource where name='$i';"` -eq 0 ]; then
                    echo "insert row $i to table acl_resource." ; 
                    sqlite3 $pathDB/acl.db "insert into acl_resource(name,description) select name,description from acl_resource_new where name='$i'; insert into acl_group_permission(id_action,id_group,id_resource) values (1,1,(select last_insert_rowid()))"
                fi
            done
            echo "End step 5, insert permission new menus at user administrator"
        
        #paso 6: Eliminar tabla acl_resource_new creada temporalmente
            sqlite3 $pathDB/acl.db "drop table acl_resource_new;"
            echo "End step 6, delete table temporalable acl_resource_new"
    fi
    if [ $modificadoPorUsuarioFaxDb -eq 0 ]; then
        #paso 7: Ver si la base fax es la ultima
            sqlite3 $pathDB/fax.db "select count(*) from fax" &>/dev/null  
            existeTableFax=$?
            sqlite3 $pathDB/fax.db "select count(*) from syslog" &>/dev/null  
            existeTableSysLog=$?
            sqlite3 $pathDB/fax.db "select count(*) from info_fax_recvq" &>/dev/null  
            existeTableInfoFaxRecq=$?
            sqlite3 $pathDB/fax.db "select count(*) from configuration_fax_mail" &>/dev/null  
            existeTableConfigFaxMail=$?

            if [ $existeTableFax -ne 0 ]; then
                echo "Not exists table fax."
                sqlite3 $pathTmpDB/fax.db.rpmnew ".dump fax" > $pathTmpDB/fax.table
                sqlite3 $pathDB/fax.db ".read $pathTmpDB/fax.table"
                echo "created table fax."
            fi
            if [ $existeTableSysLog -ne 0 ]; then
                echo "Not exists table syslog."
                sqlite3 $pathTmpDB/fax.db.rpmnew ".dump syslog" > $pathTmpDB/syslog.table
                sqlite3 $pathDB/fax.db ".read $pathTmpDB/syslog.table"
                echo "created table syslog."
            fi
            if [ $existeTableInfoFaxRecq -ne 0 ]; then
                echo "Not exists table info_fax_recvq."
                sqlite3 $pathTmpDB/fax.db.rpmnew ".dump info_fax_recvq" > $pathTmpDB/info_fax_recvq.table
                sqlite3 $pathDB/fax.db ".read $pathTmpDB/info_fax_recvq.table"
                echo "created table info_fax_recvq."
            fi
            if [ $existeTableConfigFaxMail -ne 0 ]; then
                echo "Not exists table configuration_fax_mail"
                sqlite3 $pathTmpDB/fax.db.rpmnew ".dump configuration_fax_mail" > $pathTmpDB/configuration_fax_mail.table
                sqlite3 $pathDB/fax.db ".read $pathTmpDB/configuration_fax_mail.table"
                echo "created table configuration_fax_mail"
            fi
            echo "End step 7, DataBase fax verification and tables complete"
    fi
    #paso 8: Eliminar los temporales
        rm -rf /tmp/sqlite3/
        echo "End step 8, delete path temporaly"
fi

################## End Administration Menus and permission ##########################